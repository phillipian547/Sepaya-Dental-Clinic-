import React from 'react';
import { useState, useEffect } from 'react';
import { hashPassword } from '../lib/data-helper';
import Link from 'next/link';

import Head from 'next/head'

import { Container, Row, Col, Form, Button } from 'react-bootstrap';

const defaultRegisterFormFields = {
  firstName: '',
  lastName: '',
  username: '',
  password: '',
  confirmPassword: '',
  middleName: '',
  idNumber: ''
}

export default function Register() {

  const [isRegistered, setIsRegistered] = useState(false);

  const [showError, setShowError] = useState(false);

  const [registerFormFields, setRegisterFormFields] = useState(defaultRegisterFormFields);
  const { firstName, lastName, username, password, confirmPassword, middleName, idNumber } = registerFormFields;                                                      

  const handleRegisterInputsChange = (event) => {
    const { name, value } = event.target;
    setRegisterFormFields({...registerFormFields, [name]: value});
  };

  const doSignup = async(event) => {
    event.preventDefault();

    if(firstName === '' || lastName === '' || username === '' || password === '' || confirmPassword !== password || middleName === '' || idNumber === '') {                                                             
      setShowError(true);
    } else {
      setShowError(false);

      console.log('lets add');
      
      const data = {
        firstName: firstName,
        lastName: lastName,
        username: username,
        password: await hashPassword(password),
        middleName: middleName,
        idNumber: idNumber,
        role: 'user'
      };

      console.log(data);

  
      try {
        const fetchData = await fetch('/api/users', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json',
          },
        });
  
        const jsonData = await fetchData.json();

        console.log(jsonData);
      
        if(jsonData.success && jsonData.data.affectedRows) {
          setIsRegistered(true);
        }       
  
      } catch(error) {
        //setData(null);
        console.log(error);
      }


    }

  };


  return (
    <>
      <Head>
        <title>Register - Child mapping information system</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

        <div className="register-container-wrapper">
          <Container fluid>
            <Row>

            
              <Col sm={3} className="left-side"></Col>
              <Col sm={9} className="right-side">
           
               
                { !isRegistered &&
                <>
                <p className='mt-4'>For the new BNS, you can create your new account here!</p>
                <p>Fill up all the text fields correctly to <br /> create your new account.</p>

                
                <Form className="mt-5">
                  <Row>

                    <Col sm={6}>
                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='firstName'>First Name:</Form.Label>
                        <Form.Control type="text" name="firstName" id="firstName" onChange={handleRegisterInputsChange} />
                      </Form.Group>
                      { showError && firstName === '' &&
                      <p className='field-error'>First name is required.</p>
                      }

                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='lastName'>Last Name:</Form.Label>
                        <Form.Control type="text" name="lastName" id="lastName" onChange={handleRegisterInputsChange} />
                      </Form.Group>

                      { showError && lastName === '' &&
                      <p className='field-error'>Last name is required.</p>
                      }

                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='username'>Username:</Form.Label>
                        <Form.Control type="text" name="username" id="username" onChange={handleRegisterInputsChange} />
                      </Form.Group>

                      { showError && username === '' &&
                      <p className='field-error'>Username is required.</p>
                      }

                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='password'>Password:</Form.Label>
                        <Form.Control type="password" name="password" id="password" onChange={handleRegisterInputsChange}/>
                      </Form.Group>

                      { showError && password === '' &&
                      <p className='field-error'>Password is required.</p>
                      }

                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='confirmPassword'>Confirm Password:</Form.Label>
                        <Form.Control type="password" name="confirmPassword" id="confirmPassword" onChange={handleRegisterInputsChange} />
                      </Form.Group>

                      { showError && password !== confirmPassword &&
                      <p className='field-error'>Confirm password must be the same with password.</p>
                      }

                      <Button type="button" size="sm" className='btn-common sign-up-in-register' onClick={doSignup}>                                               
                        SIGN UP
                      </Button>
                    
                    </Col>


                    <Col sm={6}>
                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='middleName'>Middle Name:</Form.Label>
                        <Form.Control type="text" name="middleName" id="middleName" onChange={handleRegisterInputsChange} />
                      </Form.Group>
                      { showError && middleName === '' &&
                      <p className='field-error'>Middle name is required.</p>
                      }

                      <Form.Group className="mb-3 inline-group">
                        <Form.Label className='idNumber'>BNS I.D. Number:</Form.Label>
                        <Form.Control type="text" name="idNumber" id="idNumber" onChange={handleRegisterInputsChange} />
                      </Form.Group>
                      { showError && idNumber === '' &&
                      <p className='field-error'>BNS I.D. Number is required.</p>
                      }
                    
                    </Col>

                    
                
                  </Row>
                </Form>
                </>  
                }

                { isRegistered &&

                  <p className='mt-4'>You are successfully registered!. Click <Link href='/'>here</Link> to login</p>
                }
                  
              
              

              </Col>



            </Row>          
          </Container>
        </div>
      
      </main>

    </>
  )
}
